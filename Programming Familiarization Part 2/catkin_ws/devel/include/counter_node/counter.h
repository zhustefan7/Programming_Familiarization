// Generated by gencpp from file counter_node/counter.msg
// DO NOT EDIT!


#ifndef COUNTER_NODE_MESSAGE_COUNTER_H
#define COUNTER_NODE_MESSAGE_COUNTER_H

#include <ros/service_traits.h>


#include <counter_node/counterRequest.h>
#include <counter_node/counterResponse.h>


namespace counter_node
{

struct counter
{

typedef counterRequest Request;
typedef counterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct counter
} // namespace counter_node


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::counter_node::counter > {
  static const char* value()
  {
    return "4280a7cf1d34a23e38e36c574443dc71";
  }

  static const char* value(const ::counter_node::counter&) { return value(); }
};

template<>
struct DataType< ::counter_node::counter > {
  static const char* value()
  {
    return "counter_node/counter";
  }

  static const char* value(const ::counter_node::counter&) { return value(); }
};


// service_traits::MD5Sum< ::counter_node::counterRequest> should match 
// service_traits::MD5Sum< ::counter_node::counter > 
template<>
struct MD5Sum< ::counter_node::counterRequest>
{
  static const char* value()
  {
    return MD5Sum< ::counter_node::counter >::value();
  }
  static const char* value(const ::counter_node::counterRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::counter_node::counterRequest> should match 
// service_traits::DataType< ::counter_node::counter > 
template<>
struct DataType< ::counter_node::counterRequest>
{
  static const char* value()
  {
    return DataType< ::counter_node::counter >::value();
  }
  static const char* value(const ::counter_node::counterRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::counter_node::counterResponse> should match 
// service_traits::MD5Sum< ::counter_node::counter > 
template<>
struct MD5Sum< ::counter_node::counterResponse>
{
  static const char* value()
  {
    return MD5Sum< ::counter_node::counter >::value();
  }
  static const char* value(const ::counter_node::counterResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::counter_node::counterResponse> should match 
// service_traits::DataType< ::counter_node::counter > 
template<>
struct DataType< ::counter_node::counterResponse>
{
  static const char* value()
  {
    return DataType< ::counter_node::counter >::value();
  }
  static const char* value(const ::counter_node::counterResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COUNTER_NODE_MESSAGE_COUNTER_H
